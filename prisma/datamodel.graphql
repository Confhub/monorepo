type User {
  id: ID! @unique
  email: String!
  name: String
  createdAt: DateTime!
  password: String!
}

type Conference {
  id: ID! @unique
  name: String!
  description: String
  tags: [Tag!]!
  url: String!
  image: Image @relation(name: "ConferenceToImage", onDelete: CASCADE)
  startDate: DateTime!
  endDate: DateTime!
  location: Location!,

  social: Social @relation(name: "ConferenceToSocial", onDelete: CASCADE)
  publishStatus: PUBLISH_STATUS @default(value: DRAFT)
}

type Tag {
  id: ID! @unique
  name: String!
  slug: String! @unique
}

type Image {
  id: ID! @unique
  src: String!
  alt: String
}

type Location {
  id: ID! @unique
  venueName: String
  country: String!
  city: String!
  street: String!
  zip: Int!
  coordinates: Coordinates
}

type Coordinates {
  id: ID! @unique
  latitude: Float!
  longitude: Float!
}

type Social {
  id: ID! @unique
  facebook: String,
  twitter: String,
  instagram: String
}

type Currency {
  id: ID! @unique
  name: String!
  value: String!
}

enum PUBLISH_STATUS {
  DRAFT
  PUBLISHED
}
